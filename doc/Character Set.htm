<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0068)http://www.opengroup.org/public/pubs/online/7908799/xbd/charset.html -->
<HTML><HEAD><TITLE>Character Set</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type><!-- Copyright 1997 The Open Group, All Rights Reserved -->
<META content="MSHTML 5.00.2919.3800" name=GENERATOR></HEAD>
<BODY bgColor=white>
<CENTER><FONT size=2>The Single UNIX ® Specification, Version 2<BR>Copyright © 
1997 The Open Group </FONT></CENTER>
<HR noShade SIZE=2>

<CENTER>
<H2><A name=tag_001>&nbsp;</A>Character Set</H2></CENTER><XREF name="chars" 
type="1"></XREF>
<P>
<H3><A name=tag_001_001>&nbsp;</A>Portable Character Set</H3><XREF 
name="charset" type="2"></XREF>Conforming implementations support one or more 
coded character sets. Each supported locale includes the <I>portable character 
set</I> specified in the following table. <PRE><TABLE border=1 borderColor=#000000 valign="top"><TBODY><TR><TH align=middle><B>Symbolic Name</B> <TH align=middle><B>Glyph</B> <TH align=middle><B>Symbolic Name</B> <TH align=middle><B>Glyph</B> <TH align=middle><B>Symbolic Name</B> <TH align=middle><B>Glyph</B> <TR vAlign=top><TD align=left>&nbsp; <TD align=middle>&nbsp; <TD align=left>&nbsp; <TD align=middle>&nbsp; <TD align=left>&lt;circumflex&gt; <TD align=middle>^ <TR vAlign=top><TD align=left>&lt;NUL&gt; <TD align=middle>&nbsp; <TD align=left>&lt;colon&gt; <TD align=middle>: <TD align=left>&lt;circumflex-accent&gt; <TD align=middle>^ <TR vAlign=top><TD align=left>&lt;alert&gt; <TD align=middle>&nbsp; <TD align=left>&lt;semicolon&gt; <TD align=middle>; <TD align=left>&lt;underscore&gt; <TD align=middle>_ <TR vAlign=top><TD align=left>&lt;backspace&gt; <TD align=middle>&nbsp; <TD align=left>&lt;less-than-sign&gt; <TD align=middle>&lt; <TD align=left>&lt;underline&gt; <TD align=middle>_ <TR vAlign=top><TD align=left>&lt;tab&gt; <TD align=middle>&nbsp; <TD align=left>&lt;equals-sign&gt; <TD align=middle>= <TD align=left>&lt;low-line&gt; <TD align=middle>_ <TR vAlign=top><TD align=left>&lt;newline&gt; <TD align=middle>&nbsp; <TD align=left>&lt;greater-than-sign&gt; <TD align=middle>&gt; <TD align=left>&lt;grave-accent&gt; <TD align=middle>` <TR vAlign=top><TD align=left>&lt;vertical-tab&gt; <TD align=middle>&nbsp; <TD align=left>&lt;question-mark&gt; <TD align=middle>? <TD align=left>&lt;a&gt; <TD align=middle>a <TR vAlign=top><TD align=left>&lt;form-feed&gt; <TD align=middle>&nbsp; <TD align=left>&lt;commercial-at&gt; <TD align=middle>@ <TD align=left>&lt;b&gt; <TD align=middle>b <TR vAlign=top><TD align=left>&lt;carriage-return&gt; <TD align=middle>&nbsp; <TD align=left>&lt;A&gt; <TD align=middle>A <TD align=left>&lt;c&gt; <TD align=middle>c <TR vAlign=top><TD align=left>&lt;space&gt; <TD align=middle>&nbsp; <TD align=left>&lt;B&gt; <TD align=middle>B <TD align=left>&lt;d&gt; <TD align=middle>d <TR vAlign=top><TD align=left>&lt;exclamation-mark&gt; <TD align=middle>! <TD align=left>&lt;C&gt; <TD align=middle>C <TD align=left>&lt;e&gt; <TD align=middle>e <TR vAlign=top><TD align=left>&lt;quotation-mark&gt; <TD align=middle>" <TD align=left>&lt;D&gt; <TD align=middle>D <TD align=left>&lt;f&gt; <TD align=middle>f <TR vAlign=top><TD align=left>&lt;number-sign&gt; <TD align=middle># <TD align=left>&lt;E&gt; <TD align=middle>E <TD align=left>&lt;g&gt; <TD align=middle>g <TR vAlign=top><TD align=left>&lt;dollar-sign&gt; <TD align=middle>$ <TD align=left>&lt;F&gt; <TD align=middle>F <TD align=left>&lt;h&gt; <TD align=middle>h <TR vAlign=top><TD align=left>&lt;percent-sign&gt; <TD align=middle>% <TD align=left>&lt;G&gt; <TD align=middle>G <TD align=left>&lt;i&gt; <TD align=middle>i <TR vAlign=top><TD align=left>&lt;ampersand&gt; <TD align=middle>&amp; <TD align=left>&lt;H&gt; <TD align=middle>H <TD align=left>&lt;j&gt; <TD align=middle>j <TR vAlign=top><TD align=left>&lt;apostrophe&gt; <TD align=middle>' <TD align=left>&lt;I&gt; <TD align=middle>I <TD align=left>&lt;k&gt; <TD align=middle>k <TR vAlign=top><TD align=left>&lt;left-parenthesis&gt; <TD align=middle>( <TD align=left>&lt;J&gt; <TD align=middle>J <TD align=left>&lt;l&gt; <TD align=middle>l <TR vAlign=top><TD align=left>&lt;right-parenthesis&gt; <TD align=middle>) <TD align=left>&lt;K&gt; <TD align=middle>K <TD align=left>&lt;m&gt; <TD align=middle>m <TR vAlign=top><TD align=left>&lt;asterisk&gt; <TD align=middle>* <TD align=left>&lt;L&gt; <TD align=middle>L <TD align=left>&lt;n&gt; <TD align=middle>n <TR vAlign=top><TD align=left>&lt;plus-sign&gt; <TD align=middle>+ <TD align=left>&lt;M&gt; <TD align=middle>M <TD align=left>&lt;o&gt; <TD align=middle>o <TR vAlign=top><TD align=left>&lt;comma&gt; <TD align=middle>, <TD align=left>&lt;N&gt; <TD align=middle>N <TD align=left>&lt;p&gt; <TD align=middle>p <TR vAlign=top><TD align=left>&lt;hyphen&gt; <TD align=middle>- <TD align=left>&lt;O&gt; <TD align=middle>O <TD align=left>&lt;q&gt; <TD align=middle>q <TR vAlign=top><TD align=left>&lt;hyphen-minus&gt; <TD align=middle>- <TD align=left>&lt;P&gt; <TD align=middle>P <TD align=left>&lt;r&gt; <TD align=middle>r <TR vAlign=top><TD align=left>&lt;period&gt; <TD align=middle>. <TD align=left>&lt;Q&gt; <TD align=middle>Q <TD align=left>&lt;s&gt; <TD align=middle>s <TR vAlign=top><TD align=left>&lt;full-stop&gt; <TD align=middle>. <TD align=left>&lt;R&gt; <TD align=middle>R <TD align=left>&lt;t&gt; <TD align=middle>t <TR vAlign=top><TD align=left>&lt;slash&gt; <TD align=middle>/ <TD align=left>&lt;S&gt; <TD align=middle>S <TD align=left>&lt;u&gt; <TD align=middle>u <TR vAlign=top><TD align=left>&lt;solidus&gt; <TD align=middle>/ <TD align=left>&lt;T&gt; <TD align=middle>T <TD align=left>&lt;v&gt; <TD align=middle>v <TR vAlign=top><TD align=left>&lt;zero&gt; <TD align=middle>0 <TD align=left>&lt;U&gt; <TD align=middle>U <TD align=left>&lt;w&gt; <TD align=middle>w <TR vAlign=top><TD align=left>&lt;one&gt; <TD align=middle>1 <TD align=left>&lt;V&gt; <TD align=middle>V <TD align=left>&lt;x&gt; <TD align=middle>x <TR vAlign=top><TD align=left>&lt;two&gt; <TD align=middle>2 <TD align=left>&lt;W&gt; <TD align=middle>W <TD align=left>&lt;y&gt; <TD align=middle>y <TR vAlign=top><TD align=left>&lt;three&gt; <TD align=middle>3 <TD align=left>&lt;X&gt; <TD align=middle>X <TD align=left>&lt;z&gt; <TD align=middle>z <TR vAlign=top><TD align=left>&lt;four&gt; <TD align=middle>4 <TD align=left>&lt;Y&gt; <TD align=middle>Y <TD align=left>&lt;left-brace&gt; <TD align=middle>{ <TR vAlign=top><TD align=left>&lt;five&gt; <TD align=middle>5 <TD align=left>&lt;Z&gt; <TD align=middle>Z <TD align=left>&lt;left-curly-bracket&gt; <TD align=middle>{ <TR vAlign=top><TD align=left>&lt;six&gt; <TD align=middle>6 <TD align=left>&lt;left-square-bracket&gt; <TD align=middle>[ <TD align=left>&lt;vertical-line&gt; <TD align=middle>| <TR vAlign=top><TD align=left>&lt;seven&gt; <TD align=middle>7 <TD align=left>&lt;backslash&gt; <TD align=middle>\ <TD align=left>&lt;right-brace&gt; <TD align=middle>} <TR vAlign=top><TD align=left>&lt;eight&gt; <TD align=middle>8 <TD align=left>&lt;reverse-solidus&gt; <TD align=middle>\ <TD align=left>&lt;right-curly-bracket&gt; <TD align=middle>} <TR vAlign=top><TD align=left>&lt;nine&gt; <TD align=middle>9 <TD align=left>&lt;right-square-bracket&gt; <TD align=middle>] <TD align=left>&lt;tilde&gt; <TD align=middle>~ </TR></TBODY></TABLE>
<H6 align=center><XREF table="Portable Character Set"><A name=tagt_1>&nbsp;</A></XREF>Table: Portable Character Set</H6>
<XREF name="portchar" type="7"></XREF>
</PRE>
<P><XREF href="portchar"><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbd/charset.html#tagt_1">Portable 
Character Set </A></XREF>defines the characters in the portable character set 
and the corresponding symbolic character names used to identify each character 
in a character set description file. The table contains more than one symbolic 
character name for characters whose traditional name differs from the chosen 
name. 
<P>This specification set places only the following requirements on the encoded 
values of the characters in the portable character set: 
<UL>
  <P>
  <LI>If the encoded values associated with each member of the portable 
  character set are not invariant across all locales supported by the 
  implementation, the results achieved by an application accessing those locales 
  are unspecified. 
  <P></P>
  <LI>The encoded values associated with the digits 0 to 9 will be such that the 
  value of each character after 0 will be one greater than the value of the 
  previous character. 
  <P></P>
  <LI>A null character, NUL, which has all bits set to zero, will be in the set 
  of characters. 
  <P></P>
  <LI>The encoded values associated with the members of the portable character 
  set are each represented in a single byte. Moreover, if the value is stored in 
  an object of C-language type <B>char</B>, it is guaranteed to be positive 
  (except the NUL, which is always zero). 
  <P></P></LI></UL>
<H3><A name=tag_001_002>&nbsp;</A>Character Encoding</H3><XREF name="char_enc" 
type="2"></XREF>The POSIX locale contains the characters in <XREF 
href="portchar"><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbd/charset.html#tagt_1">Portable 
Character Set </A></XREF>, which have the properties listed in <XREF 
href="lc_ctype"><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbd/locale.html#tag_005_003_001">LC_CTYPE 
</A></XREF>. Implementations may also add other characters. In other locales, 
the presence, meaning and representation of any additional characters is 
locale-specific. 
<P>In locales other than the POSIX locale, a character may have a 
state-dependent encoding. There are two types of these encodings: 
<UL>
  <P>
  <LI>A single-shift encoding (where each character not in the initial shift 
  state is preceded by a shift code) can be defined if each shift-code and 
  character sequence is considered a multi-byte character. This is done using 
  the concatenated-constant format in a character set description file, as 
  described in <XREF href="charmap"><A 
  href="http://www.opengroup.org/public/pubs/online/7908799/xbd/charset.html#tag_001_004">Character 
  Set Description File </A></XREF>. If the implementation supports a character 
  encoding of this type, all of the standard utilities in the <B>XCU</B> 
  specification will support it. Use of a single-shift encoding with any of the 
  functions in the <B>XSH</B> specification that do not specifically mention the 
  effects of state-dependent encoding is implementation-dependent. 
  <P></P>
  <LI>A locking-shift encoding (where the state of the character is determined 
  by a shift code that may affect more than the single character following it) 
  cannot be defined with the current character set description file format. Use 
  of a locking-shift encoding with any of the standard utilities in the 
  <B>XCU</B> specification or with any of the functions in the <B>XSH</B> 
  specification that do not specifically mention the effects of state-dependent 
  encoding is implementation-dependent. 
  <P></P></LI></UL>
<P>While in the initial shift state, all characters in the portable character 
set retain their usual interpretation and do not alter the shift state. The 
interpretation for subsequent bytes in the sequence is a function of the current 
shift state. A byte with all bits zero is interpreted as the null character 
independent of shift state. Thus a byte with all bits zero must never occur in 
the second or subsequent bytes of a character. 
<P>The maximum allowable number of bytes in a character in the current locale is 
indicated by MB_CUR_MAX, defined in the <B>XSH</B> specification <I><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xsh/stdlib.h.html">&lt;stdlib.h&gt;</A></I>, 
and by the <B>&lt;mb_cur_max&gt;</B> value in a character set description file; 
see <XREF href="charmap"><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbd/charset.html#tag_001_004">Character 
Set Description File </A></XREF>. The implementation's maximum number of bytes 
in a character is defined by the C-language macro {MB_LEN_MAX}. 
<H3><A name=tag_001_003>&nbsp;</A>C Language Wide-character Codes</H3><XREF 
name="widechar" type="2"></XREF>In the shell, the standard utilities are written 
so that the encodings of characters are described by the locale's LC_CTYPE 
definition (see <XREF href="lc_ctype"><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbd/locale.html#tag_005_003_001">LC_CTYPE 
</A></XREF>) and there is no differentiation between characters consisting of 
single octets (8-bit bytes), larger bytes, or multiple bytes. However, in the C 
language, a differentiation is made. To ease the handling of variable length 
characters, the C language has introduced the concept of wide character codes. 
<P>All wide-character codes in a given process consist of an equal number of 
bits. This is in contrast to characters, which can consist of a variable number 
of bytes. The byte or byte sequence that represents a character can also be 
represented as a wide-character code. Wide-character codes thus provide a 
uniform size for manipulating text data. A wide-character code having all bits 
zero is the null wide-character code (see <XREF href="nullwidechar"><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbd/glossary.html#tag_004_000_179">null 
wide-character code </A></XREF>), and terminates wide-character strings (see 
<XREF href="widechar"><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbd/charset.html#tag_001_003">C 
Language Wide-character Codes </A></XREF>). The wide-character value for each 
member of the Portable Character Set will equal its value when used as the lone 
character in an integer character constant. Wide-character codes for other 
characters are locale- and implementation-dependent. State shift bytes do not 
have a wide-character code representation. 
<H3><A name=tag_001_004>&nbsp;</A>Character Set Description File</H3><XREF 
name="charmap" type="2"></XREF>Implementations provide a character set 
description file for at least one coded character set supported by the 
implementation. These files are referred to elsewhere in this specification set 
as <I>charmap</I> files. It is implementation-dependent whether or not users or 
applications can provide additional character set description files. 
<P>This specification set does not require that multiple character sets or 
codesets be supported. Although multiple charmap files are supported, it is the 
responsibility of the implementation to provide the file or files; if only one 
is provided, only that one will be accessible using the <I><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xcu/localedef.html">localedef</A></I> 
utility's <B>-f</B> option (although in the case of just one file on the system, 
<B>-f</B> is not useful). 
<P>Each character set description file defines characteristics for the coded 
character set and the encoding for the characters specified in <XREF 
href="portchar"><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbd/charset.html#tagt_1">Portable 
Character Set </A></XREF>and may define encoding for additional characters 
supported by the implementation. Other information about the coded character set 
may also be in the file. Coded character set character values are defined using 
symbolic character names followed by character encoding values. 
<P>The character set description file provides: 
<UL>
  <P>
  <LI>The capability to describe character set attributes (such as collation 
  order or character classes) independent of character set encoding, and using 
  only the characters in the portable character set. This makes it possible to 
  create generic <I><A 
  href="http://www.opengroup.org/public/pubs/online/7908799/xcu/localedef.html">localedef</A></I> 
  source files for all codesets that share the portable character set (such as 
  the ISO 8859 family or IBM Extended ASCII). 
  <P></P>
  <LI>Standardised symbolic names for all characters in the portable character 
  set, making it possible to refer to any such character regardless of encoding. 

  <P></P></LI></UL>
<P>The charmap file was introduced to resolve problems with the portability of, 
especially, <I><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xcu/localedef.html">localedef</A></I> 
sources. This specification set assumes that the portable character set is 
constant across all locales, but does not prohibit implementations from 
supporting two incompatible codings, such as both ASCII and EBCDIC. Such 
dual-support implementations should have all charmaps and <I><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xcu/localedef.html">localedef</A></I> 
sources encoded using one portable character set, in effect cross-compiling for 
the other environment. Naturally, charmaps (and <I><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xcu/localedef.html">localedef</A></I> 
sources) are only portable without transformation between systems using the same 
encodings for the portable character set. They can, however, be transformed 
between two sets using only a subset of the actual characters (the portable 
set). However, the particular coded character set used for an application or an 
implementation does not necessarily imply different characteristics or 
collation; on the contrary, these attributes should in many cases be identical, 
regardless of codeset. The charmap provides the capability to define a common 
locale definition for multiple codesets (the same <I><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xcu/localedef.html">localedef</A></I> 
source can be used for codesets with different extended characters; the ability 
in the charmap to define empty names allows for characters missing in certain 
codesets). 
<P>Each symbolic name specified in <XREF href="portchar"><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbd/charset.html#tagt_1">Portable 
Character Set </A></XREF>is included in the file and is mapped to a unique 
encoding value (except for those symbolic names that are shown with identical 
glyphs). If the control characters commonly associated with the symbolic names 
in the following table are supported by the implementation, the symbolic names 
and their corresponding encoding values are included in the file. Some of the 
encodings associated with the symbolic names in this table may be the same as 
characters in the portable character set table. <PRE><CENTER>
<TABLE align=center border=1 borderColor=#000000><TBODY><TR vAlign=top><TD align=middle>&lt;ACK&gt; <TD align=middle>&lt;DC2&gt; <TD align=middle>&lt;ENQ&gt; <TD align=middle>&lt;FS&gt; <TD align=middle>&lt;IS4&gt; <TD align=middle>&lt;SOH&gt; <TR vAlign=top><TD align=middle>&lt;BEL&gt; <TD align=middle>&lt;DC3&gt; <TD align=middle>&lt;EOT&gt; <TD align=middle>&lt;GS&gt; <TD align=middle>&lt;LF&gt; <TD align=middle>&lt;STX&gt; <TR vAlign=top><TD align=middle>&lt;BS&gt; <TD align=middle>&lt;DC4&gt; <TD align=middle>&lt;ESC&gt; <TD align=middle>&lt;HT&gt; <TD align=middle>&lt;NAK&gt; <TD align=middle>&lt;SUB&gt; <TR vAlign=top><TD align=middle>&lt;CAN&gt; <TD align=middle>&lt;DEL&gt; <TD align=middle>&lt;ETB&gt; <TD align=middle>&lt;IS1&gt; <TD align=middle>&lt;RS&gt; <TD align=middle>&lt;SYN&gt; <TR vAlign=top><TD align=middle>&lt;CR&gt; <TD align=middle>&lt;DLE&gt; <TD align=middle>&lt;ETX&gt; <TD align=middle>&lt;IS2&gt; <TD align=middle>&lt;SI&gt; <TD align=middle>&lt;US&gt; <TR vAlign=top><TD align=middle>&lt;DC1&gt; <TD align=middle>&lt;EM&gt; <TD align=middle>&lt;FF&gt; <TD align=middle>&lt;IS3&gt; <TD align=middle>&lt;SO&gt; <TD align=middle>&lt;VT&gt; </TR></TBODY></TABLE>
<H6 align=center><XREF table="Control Character Set"><A name=tagt_2>&nbsp;</A></XREF>Table: Control Character Set</H6>
<XREF name="cntlchar" type="7"></XREF>
</CENTER>
</PRE>
<P>The following declarations can precede the character definitions. Each must 
consist of the symbol shown in the following list, starting in column 1, 
including the surrounding brackets, followed by one or more blank characters, 
followed by the value to be assigned to the symbol. 
<DL compact>
  <DT><B>&lt;code_set_name&gt;</B>
  <DD>The name of the coded character set for which the character set 
  description file is defined. The characters of the name must be taken from the 
  set of characters with visible glyphs defined in <XREF href="portchar"><A 
  href="http://www.opengroup.org/public/pubs/online/7908799/xbd/charset.html#tagt_1">Portable 
  Character Set </A></XREF>. 
  <DT><B>&lt;mb_cur_max&gt;</B>
  <DD>The maximum number of bytes in a multi-byte character. This defaults to 1. 

  <DT><B>&lt;mb_cur_min&gt;</B>
  <DD>An unsigned positive integer value that defines the minimum number of 
  bytes in a character for the encoded character set. On XSI-conformant systems, 
  <B>&lt;mb_cur_min&gt;</B> is always 1. 
  <DT><B>&lt;escape_char&gt;</B>
  <DD>The escape character used to indicate that the characters following will 
  be interpreted in a special way, as defined later in this section. This 
  defaults to backslash (\), which is the character glyph used in all the 
  following text and examples, unless otherwise noted. 
  <DT><B>&lt;comment_char&gt;</B>
  <DD>The character that when placed in column 1 of a charmap line, is used to 
  indicate that the line is to be ignored. The default character is the number 
  sign (#). </DD></DL>
<P>The character set mapping definitions will be all the lines immediately 
following an identifier line containing the string <B>CHARMAP</B> starting in 
column 1, and preceding a trailer line containing the string <B>END</B>CHARMAP 
starting in column 1. Empty lines and lines containing a 
<B>&lt;comment_char&gt;</B> in the first column will be ignored. Each 
non-comment line of the character set mapping definition (that is, between the 
<B>CHARMAP</B> and <B>END</B>CHARMAP lines of the file) must be in either of two 
forms: 
<P>
<DL compact>
  <DT>
  <DD>
  <P><TT>"%s %s %s\n"</TT>, &lt;<I>symbolic-name</I>&gt;, 
  &lt;<I>encoding</I>&gt;, &lt;<I>comments</I>&gt; </P></DD></DL>
<P></P>or: 
<P>
<DL compact>
  <DT>
  <DD>
  <P><TT>"%s...%s %s %s\n"</TT>, &lt;<I>symbolic-name</I>&gt;, 
  &lt;<I>symbolic-name</I>&gt;, &lt;<I>encoding</I>&gt;, &lt;<I>comments</I>&gt; 
  </P></DD></DL>
<P></P>
<P>In the first format, the line in the character set mapping definition defines 
a single symbolic name and a corresponding encoding. A symbolic name is one or 
more characters from the set shown with visible glyphs in <XREF 
href="portchar"><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbd/charset.html#tagt_1">Portable 
Character Set </A></XREF>, enclosed between angle brackets. A character 
following an escape character is interpreted as itself; for example, the 
sequence &lt;\\\&gt;&gt; represents the symbolic name \&gt; enclosed between 
angle brackets. 
<P>In the second format, the line in the character set mapping definition 
defines a range of one or more symbolic names. In this form, the symbolic names 
must consist of zero or more non-numeric characters from the set shown with 
visible glyphs in <XREF href="portchar"><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbd/charset.html#tagt_1">Portable 
Character Set </A></XREF>, followed by an integer formed by one or more decimal 
digits. The characters preceding the integer must be identical in the two 
symbolic names, and the integer formed by the digits in the second symbolic name 
must be equal to or greater than the integer formed by the digits in the first 
name. This is interpreted as a series of symbolic names formed from the common 
part and each of the integers between the first and the second integer, 
inclusive. As an example, &lt;j0101&gt;...&lt;j0104&gt; is interpreted as the 
symbolic names &lt;j0101&gt;, &lt;j0102&gt;, &lt;j0103&gt; and &lt;j0104&gt;, in 
that order. 
<P>A character set mapping definition line must exist for all symbolic names 
specified in <XREF href="portchar"><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbd/charset.html#tagt_1">Portable 
Character Set </A></XREF>, and must define the coded character value that 
corresponds to the character glyph indicated in the table, or the coded 
character value that corresponds with the control character symbolic name. If 
the control characters commonly associated with the symbolic names in <XREF 
href="cntlchar"><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbd/charset.html#tagt_2">Control 
Character Set </A></XREF>are supported by the implementation, the symbolic name 
and the corresponding encoding value must be included in the file. Additional 
unique symbolic names may be included. A coded character value can be 
represented by more than one symbolic name. 
<P>The encoding part is expressed as one (for single-byte character values) or 
more concatenated decimal, octal or hexadecimal constants in the following 
formats: 
<P>
<DL compact>
  <DT>
  <DD><TT>"%cd%d"</TT>, &lt;<I>escape_char</I>&gt;, 
  &lt;<I>decimal&nbsp;byte&nbsp;value</I>&gt; </DD></DL>
<P></P>
<P>
<DL compact>
  <DT>
  <DD><TT>"%cx%x"</TT>, &lt;<I>escape_char</I>&gt;, 
  &lt;<I>hexadecimal&nbsp;byte&nbsp;value</I>&gt; </DD></DL>
<P></P>
<P>
<DL compact>
  <DT>
  <DD><TT>"%c%o"</TT>, &lt;<I>escape_char</I>&gt;, 
  &lt;<I>octal&nbsp;byte&nbsp;value</I>&gt; </DD></DL>
<P></P>
<P>Decimal constants must be represented by two or three decimal digits, 
preceded by the escape character and the lower-case letter d; for example, \d05, 
\d97 or \d143. Hexadecimal constants must be represented by two hexadecimal 
digits, preceded by the escape character and the lower-case letter x; for 
example, \x05, \x61 or \x8f. Octal constants must be represented by two or three 
octal digits, preceded by the escape character; for example, \05, \141 or \217. 
In a portable charmap file, each constant must represent an 8-bit byte. 
Implementations supporting other byte sizes may allow constants to represent 
values larger than those that can be represented in 8-bit bytes, and to allow 
additional digits in constants. When constants are concatenated for multi-byte 
character values, they must be of the same type, and interpreted in byte order 
from first to last with the least significant byte of the multi-byte character 
specified by the last constant. The manner in which these constants are 
represented in the character stored in the system is implementation-dependent. 
(This big endian notation was chosen for reasons of portability. There is no 
requirement that the internal representation in the computer memory be in this 
same order.) Omitting bytes from a multi-byte character definition produces 
undefined results. 
<P>In lines defining ranges of symbolic names, the encoded value is the value 
for the first symbolic name in the range (the symbolic name preceding the 
ellipsis). Subsequent symbolic names defined by the range will have encoding 
values in increasing order. For example, the line: <CODE><PRE>&lt;j0101&gt;...&lt;j0104&gt;    \d129\d254
</CODE>
</PRE>
<P>will be interpreted as: <CODE><PRE>&lt;j0101&gt;              \d129\d254
&lt;j0102&gt;              \d129\d255
&lt;j0103&gt;              \d130\d0
&lt;j0104&gt;              \d130\d1
</CODE>
</PRE>
<P>Note that this line will be interpreted as the example even on systems with 
bytes larger than 8 bits. 
<P>The comment is optional. 
<P>For the interpretation of the dollar sign and the number sign, see <XREF 
href="dollarsign"><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbd/glossary.html#tag_004_000_079">dollar 
sign </A></XREF>and <XREF href="numbersign"><A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbd/glossary.html#tag_004_000_180">number 
sign </A></XREF>. 
<HR noShade SIZE=2>

<CENTER><FONT size=2>UNIX ® is a registered Trademark of The Open 
Group.<BR>Copyright © 1997 The Open Group <BR>[ <A 
href="http://www.opengroup.org/public/pubs/online/7908799/index.html">Main 
Index</A> | <A 
href="http://www.opengroup.org/public/pubs/online/7908799/xshix.html">XSH</A> | 
<A href="http://www.opengroup.org/public/pubs/online/7908799/xcuix.html">XCU</A> 
| <A 
href="http://www.opengroup.org/public/pubs/online/7908799/xbdix.html">XBD</A> | 
<A 
href="http://www.opengroup.org/public/pubs/online/7908799/cursesix.html">XCURSES</A> 
| <A 
href="http://www.opengroup.org/public/pubs/online/7908799/xnsix.html">XNS</A> ] 
</FONT></CENTER>
<HR noShade SIZE=2>
</BODY></HTML>
